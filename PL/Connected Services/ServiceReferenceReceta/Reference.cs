//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PL.ServiceReferenceReceta {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceReceta.IRecetaService")]
    public interface IRecetaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecetaService/RecetaAdd", ReplyAction="http://tempuri.org/IRecetaService/RecetaAddResponse")]
        bool RecetaAdd(ML.Receta receta, int matricula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecetaService/RecetaAdd", ReplyAction="http://tempuri.org/IRecetaService/RecetaAddResponse")]
        System.Threading.Tasks.Task<bool> RecetaAddAsync(ML.Receta receta, int matricula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecetaService/RecetaUpdate", ReplyAction="http://tempuri.org/IRecetaService/RecetaUpdateResponse")]
        bool RecetaUpdate(ML.Receta receta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecetaService/RecetaUpdate", ReplyAction="http://tempuri.org/IRecetaService/RecetaUpdateResponse")]
        System.Threading.Tasks.Task<bool> RecetaUpdateAsync(ML.Receta receta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecetaService/RecetaList", ReplyAction="http://tempuri.org/IRecetaService/RecetaListResponse")]
        ML.RecetaAlumno[] RecetaList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecetaService/RecetaList", ReplyAction="http://tempuri.org/IRecetaService/RecetaListResponse")]
        System.Threading.Tasks.Task<ML.RecetaAlumno[]> RecetaListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecetaService/RecetaGetById", ReplyAction="http://tempuri.org/IRecetaService/RecetaGetByIdResponse")]
        ML.Receta RecetaGetById(int ideReceta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecetaService/RecetaGetById", ReplyAction="http://tempuri.org/IRecetaService/RecetaGetByIdResponse")]
        System.Threading.Tasks.Task<ML.Receta> RecetaGetByIdAsync(int ideReceta);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRecetaServiceChannel : PL.ServiceReferenceReceta.IRecetaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecetaServiceClient : System.ServiceModel.ClientBase<PL.ServiceReferenceReceta.IRecetaService>, PL.ServiceReferenceReceta.IRecetaService {
        
        public RecetaServiceClient() {
        }
        
        public RecetaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RecetaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecetaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecetaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RecetaAdd(ML.Receta receta, int matricula) {
            return base.Channel.RecetaAdd(receta, matricula);
        }
        
        public System.Threading.Tasks.Task<bool> RecetaAddAsync(ML.Receta receta, int matricula) {
            return base.Channel.RecetaAddAsync(receta, matricula);
        }
        
        public bool RecetaUpdate(ML.Receta receta) {
            return base.Channel.RecetaUpdate(receta);
        }
        
        public System.Threading.Tasks.Task<bool> RecetaUpdateAsync(ML.Receta receta) {
            return base.Channel.RecetaUpdateAsync(receta);
        }
        
        public ML.RecetaAlumno[] RecetaList() {
            return base.Channel.RecetaList();
        }
        
        public System.Threading.Tasks.Task<ML.RecetaAlumno[]> RecetaListAsync() {
            return base.Channel.RecetaListAsync();
        }
        
        public ML.Receta RecetaGetById(int ideReceta) {
            return base.Channel.RecetaGetById(ideReceta);
        }
        
        public System.Threading.Tasks.Task<ML.Receta> RecetaGetByIdAsync(int ideReceta) {
            return base.Channel.RecetaGetByIdAsync(ideReceta);
        }
    }
}
